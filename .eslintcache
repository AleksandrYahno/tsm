[{"/Users/aleksandryahno/WebstormProjects/TypescriptMobX/tsm/src/index.tsx":"1","/Users/aleksandryahno/WebstormProjects/TypescriptMobX/tsm/src/reportWebVitals.ts":"2","/Users/aleksandryahno/WebstormProjects/TypescriptMobX/tsm/src/App.tsx":"3","/Users/aleksandryahno/WebstormProjects/TypescriptMobX/tsm/src/components/Container.tsx":"4","/Users/aleksandryahno/WebstormProjects/TypescriptMobX/tsm/src/components/ContainerData.tsx":"5","/Users/aleksandryahno/WebstormProjects/TypescriptMobX/tsm/src/components/PdfTronContainer.tsx":"6"},{"size":266,"mtime":1608647227394,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1608646911348,"results":"9","hashOfConfig":"8"},{"size":460,"mtime":1609334831772,"results":"10","hashOfConfig":"8"},{"size":910,"mtime":1609336993365,"results":"11","hashOfConfig":"8"},{"size":1486,"mtime":1609336750510,"results":"12","hashOfConfig":"8"},{"size":777,"mtime":1609332687621,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"h0svus",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/aleksandryahno/WebstormProjects/TypescriptMobX/tsm/src/index.tsx",[],["29","30"],"/Users/aleksandryahno/WebstormProjects/TypescriptMobX/tsm/src/reportWebVitals.ts",[],"/Users/aleksandryahno/WebstormProjects/TypescriptMobX/tsm/src/App.tsx",["31"],"import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport Container from './components/Container';\nimport PdfTronContainer from './components/PdfTronContainer';\n\nconst url = 'https://jsonplaceholder.typicode.com/posts'\n\nconst App = () => {\n    // console.log('observer : ', observer)\n\n    return (\n        <div>\n            <PdfTronContainer />\n            <Container cont={url} array={false}/>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/aleksandryahno/WebstormProjects/TypescriptMobX/tsm/src/components/Container.tsx",[],"/Users/aleksandryahno/WebstormProjects/TypescriptMobX/tsm/src/components/ContainerData.tsx",[],"/Users/aleksandryahno/WebstormProjects/TypescriptMobX/tsm/src/components/PdfTronContainer.tsx",["32"],"import React, {useRef, useEffect} from 'react';\nimport WebViewer from '@pdftron/webviewer';\n\nconst PdfTronContainer = () => {\n    const viewerDiv = useRef<HTMLDivElement>(null)\n\n    useEffect(() => {\n        WebViewer({\n                path: 'lib',\n                initialDoc: 'https://file-examples-com.github.io/uploads/2017/10/file-sample_150kB.pdf'\n            },\n            viewerDiv.current as HTMLDivElement).then((instance) => {\n            const { docViewer } = instance;\n            // console.log('instance :', instance)\n            // console.log('docViewer :', docViewer)\n\n            // you can now call WebViewer APIs here...\n        })\n    }, [])\n\n    return (\n        <div ref={viewerDiv} style={{height: '200px'}}/>\n    )\n}\n\nexport default PdfTronContainer;\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":2,"column":10,"nodeType":"39","messageId":"40","endLine":2,"endColumn":18},{"ruleId":"37","severity":1,"message":"41","line":13,"column":21,"nodeType":"39","messageId":"40","endLine":13,"endColumn":30},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"@typescript-eslint/no-unused-vars","'observer' is defined but never used.","Identifier","unusedVar","'docViewer' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]